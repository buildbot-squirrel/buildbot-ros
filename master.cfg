#!/usr/bin/env python
# buildbot-ros configuration file

# import relevant parts
from buildbot_ros_cfg.ros_deb import ros_debbuild
from buildbot_ros_cfg.ros_test import ros_testbuild
from buildbot_ros_cfg.ros_doc import ros_docbuild
from buildbot_ros_cfg.launchpad_deb import launchpad_debbuild
from buildbot_ros_cfg.distro import *
from buildbot_ros_cfg.distro_private import get_private_index
from buildbot_ros_cfg.git_pr_poller import GitPRPoller
from buildbot_ros_cfg.distro_private import get_private_index

from buildbot.schedulers import forcesched, timed
from buildbot.status.mail import MailNotifier
from buildbot.plugins import util
from buildbot.status.web import auth
from buildbot.status import html
from buildbot.status.web.hooks.github import GitHubEventHandler

from buildbot.buildslave import BuildSlave
from rosdistro import get_index


# BuildMasterConfig
c = BuildmasterConfig = {}
c['title'] = 'Buildbot-ROS'
c['titleURL'] = 'http://github.com/buildbot-squirrel/buildbot-ros'
c['buildbotURL'] = "http://153.97.4.193:8080"
c['builders'] = []
c['change_source'] = []
c['schedulers'] = []

c['db'] = {
    # This specifies what database buildbot uses to store its state. You can leave
    # this at its default for all but the largest installations.
    'db_url' : "sqlite:///state.sqlite",
}

#authz = util.Authz(useHttpHeader=True) # WebStatus secured by web frontend with HTTP auth

#authz_cfg = util.Authz(
#  useHttpHeader=True,
#  httpLoginUrl='https://localhost/login',
#  auth = util.HTPasswdAprAuth('/var/www/htpasswd'),
#  forceBuild = 'auth')


# Web front end
authz_cfg_admin=util.Authz(
    # change any of these to True to enable; see the manual for more options
    auth=util.BasicAuth([("admin","buildit!")]),
    gracefulShutdown = True,
    forceBuild = 'auth',
    view = 'auth',
    stopBuild = True,
    forceAllBuilds = True,
    pingBuilder = True,
    stopAllBuilds = True,
    cancelPendingBuild = True,
    showUsersPage = True,
)


users = [
    ("admin","buildit!"),
    ("squirrel-user","squirrel!")
]

authz_cfg=util.Authz(
    # change any of these to True to enable; see the manual for more options
    auth=util.BasicAuth(users),
    gracefulShutdown = True,
    forceBuild = True,
    view = 'auth',
    forceAllBuilds = False,
    pingBuilder = True,
    stopBuild = False,
    stopAllBuilds = False,
    cancelPendingBuild = True,
    showUsersPage = True,
		pauseSlave = True,
)

c['status'] = []
c['status'].append(html.WebStatus(http_port=8080, authz=authz_cfg,change_hook_dialects={'base':'True','github':{'secret':'squirrel!'}})) # github':{'secret':'squirrel!'}}))

# Build Machines
c['slaves'] = [BuildSlave('rosbuilder1', 'mebuildslotsaros'),
               BuildSlave('rosbuilder2', 'mebuildslotsaros')]
c['slavePortnum'] = 9989
BUILDERS = ['rosbuilder1', 'rosbuilder2']

# Pull request builder tokens (should not be stored in rosdistro)
# This is a mapping of "repo" -> "token"
# If a repo has no entry, then pull request builder will not be started
oauth_tokens = dict()
oauth_tokens["squirrel_common"] = "..."
oauth_tokens["squirrel_hri"] = "..."
oauth_tokens["squirrel_nav"] = "..."
oauth_tokens["squirrel_driver"] = "..."
oauth_tokens["squirrel_manipulation"] = "..."
oauth_tokens["squirrel_perception"] = "..."
oauth_tokens["squirrel_planning"] = "..."
oauth_tokens["squirrel_kclhand"] = "..."
oauth_tokens["squirrel_robotino"] = "..."
oauth_tokens["squirrel_calibration"] = "..."
oauth_tokens["squirrel_motion_planner"] = "..."

# RosDistro Stuff
#rosindex = get_private_index('git@github.com:ipa320/rosrelease_ipa') 
#rosindex = get_private_index('git@github.com:squirrel-project/rosdistro-squirrel') 
rosindex = get_private_index('git@github.com:buildbot-squirrel/rosdistro-squirrel') 
#rosindex = get_private_index('git@github.com:ipa-nhg/rosrelease_ipa') 

#rosindex = get_index('https://raw.githubusercontent.com/buildbot-squirrel/rosdistro-squirrel/master/index.yaml') 
#get_index('https://raw.github.com/mikeferguson/rosdistro-buildbot-example/with-apache/index.yaml')
dist_names = rosindex.distributions.keys()
oracle = RosDistroOracle(rosindex, dist_names)

# Setup jobs
DEB_JOBS = list()
TEST_JOBS = list()
DOC_JOBS = list()
LPD_JOBS = list()
nightlyDebNames = list()
nightlyDocNames = list()
for dist in dist_names:
    print('')
    print('Configuring for %s' % dist)

    # debian builder
    DEB_JOBS += debbuilders_from_rosdistro(c, oracle, dist, 'rosbuilder1')

    # test jobs, triggered by source commit
    TEST_JOBS += testbuilders_from_rosdistro(c, oracle, dist, 'rosbuilder2', oauth_tokens)

    # doc jobs
    DOC_JOBS = docbuilders_from_rosdistro(c, oracle, dist, 'rosbuilder1')

    # get name of first of nightly debuilds for this distro
    build_files = get_release_build_files(oracle.getIndex(), dist)
    for build_file in build_files:
        for os in build_file.get_target_os_names():
            for code_name in build_file.get_target_os_code_names(os):
                for arch in build_file.get_target_arches(os, code_name):
                    nightlyDebNames.append(oracle.getNightlyDebStart(dist)+'_'+dist+'_'+code_name+'_'+arch+'_debbuild')

    # get name of first nightly docbuilds for this distro
    nightlyDocNames.append(oracle.getNightlyDocStart(dist)+'_'+dist+'_docbuild')
    print('')

# Build debs at 2AM
#c['schedulers'].append(
#    timed.Nightly(
#        name = 'nightly-debbuild',
#        branch = 'master',
#        builderNames = nightlyDebNames,
#        hour=2,
#        minute=0
#    )
#)

# Build debs at 5AM
#c['schedulers'].append(
#    timed.Nightly(
#        name = 'nightly-docbuild',
#        branch = 'master',
#        builderNames = nightlyDocNames,
#        hour=5,
#        minute=0
#    )
#)

c['schedulers'].append(
    forcesched.ForceScheduler(
        name='force',
        builderNames=DEB_JOBS+TEST_JOBS+DOC_JOBS+LPD_JOBS,
    )
)

mn = MailNotifier(fromaddr="squirrelbuildbot@gmail.com",
    sendToInterestedUsers=True,
    addLogs=True,
    extraRecipients=["squirrelbuildbot@gmail.com"],
    relayhost="smtp.gmail.com", smtpPort=587,
    smtpUser="squirrelbuildbot@gmail.com", smtpPassword="buildit!")

c['status'].append(mn)
